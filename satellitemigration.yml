---
# This is for testing purpose only as of now, beta version
# in final version you need to change hosts to an inventory file
# and use ssh connection instead
# Note! This is untested and should not be used for now!
# Last update 2021-01-07
# By Henrik Lowenberg
#
- hosts: localhost
  connection: local
  gather_facts: true

  pre_tasks:
    - name: collect only facts about hardware
      setup:
        gather_subset:
          - 'hardware'
    - name: get file system facts
      setup: filter=ansible_mounts

  tasks:
    - name: Satellite block
      block:
        - name: Ensure > 10% free space on /var
          assert:
            that:
              - item.size_available > item.size_total|float * 0.09
            msg: ‘disk space has reached 90% threshold’
          when: item.mount == "/var"
          with_items: "{{ ansible_mounts }}"

        - name: Slurp up content of file containing host app/db from puppet
          slurp:
            src: /var/log/puppet_configgroups.txt
          register: cgroupfile

        - name: create a custom addon fact based on content of local file
          set_fact:
            addon: >-
              "{{ cgroupfile['content'] | b64decode |
              regex_search('^ADDON=.*', multiline=True) |
              regex_replace('ADDON=') | regex_replace('\\d{2}') | lower }}"

        - debug:
            var: addon
            verbosity: 2

        - name: download bootstrap script
          get_url:
            url: https://sat6.example.com/pub/bootstrap.py
            dest: /tmp/bootstrap.py

        - name: make bootstrap file executable
          file:
            path: /tmp/bootstrap.py
            state: file
            mode: '0700'

        - name: run bootstrap script, RHEL OS, no addon
          shell: >-
            /tmp/bootstrap.py -l satellitehostmove -p satellitehostmove
             -s sat6.example.com --fqdn {{ ansible_hostname }}
             -o MYORG -L got -g rhel7_6m/site_customer
              -a ak-auto,ak-rhel7_6m
              --skip puppet --skip katello-host-tools
          when: addon is not defined

        - name: run bootstrap script, RHEL OS, addon hostgroup, no activationkey
          shell: >-
            /tmp/bootstrap.py -l satellitehostmove -p satellitehostmove
             -s sat6.example.com --fqdn {{ ansible_hostname }}
             -o MYORG -L got -g rhel7_6m/site_customer/{{ addon }}
             -a ak-auto,ak-rhel7_6m
             --skip puppet --skip katello-host-tools
          when:
            - addon is defined
            - addon == "app1" or
              addon == "db1" or
              addon == "app2" or
              addon == "app3"

        - name: run bootstrap script, RHEL OS, addon hostgroup + activationkey
          shell: >-
           /tmp/bootstrap.py -l satellitehostmove -p satellitehostmove
           -s sat6.example.com --fqdn {{ ansible_hostname }}
           -o MYORG -L got -g rhel7_6m/site_customer/{{ addon }}
           -a ak-auto,ak-rhel7_6m,ak-rhel7_6m_{{ addon }}
           --skip puppet --skip katello-host-tools
          when:
            - addon is defined
            - addon == "app4" or
             addon == "app5" or
             addon == "db2" or
             addon == "app6" or
             addon == "app7" or
             addon == "app8"

        - name: List subscribed channels on new Satellite
          yum:
            update_cache: true
            list: repos
          register: subscribedchannels

        - debug:
            var: subscribedchannels
            verbosity: 2


    - name: Puppet block
      block:
        - name: stop puppet service
          service:
            name: puppet
            state: stopped

        - name: gather puppet cert files to delete
          find:
            paths: /var/lib/puppet/ssl
            patterns: "*"
          register: files_to_delete

        - name: remove puppet cert files
          file:
            path: "{{ item.path }}"
            state: absent
          with_items: "{{ files_to_delete.files }}"

        - name: create new puppet.conf, backup the old one
          copy:
            dest: /etc/puppet/puppet.conf
            owner: root
            group: root
            mode: '0644'
            backup: true
            content: |
                [main]
                logdir = /var/log/puppet
                rundir = /var/run/puppet
                ssldir = $vardir/ssl
                use_srv_records = true
                srv_domain = _puppet5masters.example.com
                syslogfacility = local6
                [agent]
                classfile = $vardir/classes.txt
                localconfig = $confdir/localconfig
                pluginsource = puppet:///plugins
                pluginfactsource = puppet:///pluginfacts
                splay = true

        - name: create puppet autosign
          copy:
            dest: /etc/puppet/csr_attributes.yaml
            owner: puppet
            group: puppet
            mode: '0600'
            content: |
              ---
              custom_attributes:
                1.2.840.113549.1.9.7: PleaseAllowMeToIntroduceMyself

        - name: run puppet once with the new configuration
          shell: >-
            /bin/puppet agent -t --onetime --tags no_such_tag
             --waitforcert 30 --no-daemonize
          register: puppetagentoutput
          failed_when: puppetagentoutput.rc != 2

        - debug:
            msg: puppetagentoutput.stderr

        - name: Check for puppet agent_disabled file
          stat:
            path: "/var/lib/puppet/state/agent_disabled.lock"
          register: lockfile

        - name: start and enable the puppet service
          service:
            name: puppet
            state: started
            enabled: true
          when: puppetagentoutput.rc == 2 and lockfile.stat.exists == False
